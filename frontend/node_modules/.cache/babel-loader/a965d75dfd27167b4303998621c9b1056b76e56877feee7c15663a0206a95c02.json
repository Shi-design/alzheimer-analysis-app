{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\OneDrive\\\\alzheimer-analysis-app\\\\frontend\\\\src\\\\pages\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\n// Simple quiz questions based on MMSE/MoCA\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  text: \"What is today's date?\",\n  points: 5\n}, {\n  text: 'Spell the word \"WORLD\" backwards.',\n  points: 5\n}, {\n  text: 'Name an object that is a writing utensil.',\n  points: 5\n}, {\n  text: 'Repeat these 3 words: Apple, Table, Penny.',\n  points: 5\n}, {\n  text: 'Count backwards from 50 by 3s.',\n  points: 5\n}, {\n  text: 'What city are we in right now?',\n  points: 5\n}];\nconst QuizPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    personalDetails\n  } = location.state || {};\n  const handleSubmit = e => {\n    e.preventDefault();\n    // This is a simplified scoring. A real app would have more complex validation.\n    // For this demo, we'll assign a mock score.\n    const mockScore = 22; // Example score out of 30\n    console.log('Quiz Score:', mockScore);\n    navigate('/upload', {\n      state: {\n        personalDetails,\n        quizScore: mockScore\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cognitive Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: q.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          style: {\n            width: '95%',\n            marginTop: '5px'\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Quiz & Proceed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","questions","text","points","QuizPage","_s","navigate","location","personalDetails","state","handleSubmit","e","preventDefault","mockScore","console","log","quizScore","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","q","index","style","marginBottom","type","width","marginTop","required","_c","$RefreshReg$"],"sources":["C:/Users/shiva/OneDrive/alzheimer-analysis-app/frontend/src/pages/QuizPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\n// Simple quiz questions based on MMSE/MoCA\r\nconst questions = [\r\n  { text: \"What is today's date?\", points: 5 },\r\n  { text: 'Spell the word \"WORLD\" backwards.', points: 5 },\r\n  { text: 'Name an object that is a writing utensil.', points: 5 },\r\n  { text: 'Repeat these 3 words: Apple, Table, Penny.', points: 5 },\r\n  { text: 'Count backwards from 50 by 3s.', points: 5 },\r\n  { text: 'What city are we in right now?', points: 5 },\r\n];\r\n\r\nconst QuizPage = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { personalDetails } = location.state || {};\r\n  \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // This is a simplified scoring. A real app would have more complex validation.\r\n    // For this demo, we'll assign a mock score.\r\n    const mockScore = 22; // Example score out of 30\r\n    console.log('Quiz Score:', mockScore);\r\n\r\n    navigate('/upload', { state: { personalDetails, quizScore: mockScore } });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Cognitive Quiz</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {questions.map((q, index) => (\r\n          <div key={index} style={{ marginBottom: '15px' }}>\r\n            <label>{q.text}</label>\r\n            <input type=\"text\" style={{ width: '95%', marginTop: '5px' }} required />\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\">Submit Quiz & Proceed</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;;AAE3D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAG,CAChB;EAAEC,IAAI,EAAE,uBAAuB;EAAEC,MAAM,EAAE;AAAE,CAAC,EAC5C;EAAED,IAAI,EAAE,mCAAmC;EAAEC,MAAM,EAAE;AAAE,CAAC,EACxD;EAAED,IAAI,EAAE,2CAA2C;EAAEC,MAAM,EAAE;AAAE,CAAC,EAChE;EAAED,IAAI,EAAE,4CAA4C;EAAEC,MAAM,EAAE;AAAE,CAAC,EACjE;EAAED,IAAI,EAAE,gCAAgC;EAAEC,MAAM,EAAE;AAAE,CAAC,EACrD;EAAED,IAAI,EAAE,gCAAgC;EAAEC,MAAM,EAAE;AAAE,CAAC,CACtD;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW;EAAgB,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI,CAAC,CAAC;EAEhD,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA;IACA,MAAMC,SAAS,GAAG,EAAE,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,SAAS,CAAC;IAErCP,QAAQ,CAAC,SAAS,EAAE;MAAEG,KAAK,EAAE;QAAED,eAAe;QAAEQ,SAAS,EAAEH;MAAU;IAAE,CAAC,CAAC;EAC3E,CAAC;EAED,oBACEb,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBrB,OAAA;MAAMsB,QAAQ,EAAEZ,YAAa;MAAAO,QAAA,GAC1BhB,SAAS,CAACsB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACtBzB,OAAA;QAAiB0B,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAV,QAAA,gBAC/CjB,OAAA;UAAAiB,QAAA,EAAQO,CAAC,CAACtB;QAAI;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvBrB,OAAA;UAAO4B,IAAI,EAAC,MAAM;UAACF,KAAK,EAAE;YAAEG,KAAK,EAAE,KAAK;YAAEC,SAAS,EAAE;UAAM,CAAE;UAACC,QAAQ;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,GAFjEI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACN,CAAC,eACFrB,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChB,EAAA,CA7BID,QAAQ;EAAA,QACKN,WAAW,EACXD,WAAW;AAAA;AAAAmC,EAAA,GAFxB5B,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}